/*fn fast_mul(x: u16, y: u16) -> u16 {
	if y == 0 {
		return 0;
	}
	else if y & 1 == 0 {
		return shl(fast_mul(x, shr(y)));
	}
	else {
		return x + mul(x, y - 1);
	}
}

fn dumb_mul(x: u16, y: u16) -> u16 {
	let ans: u16 = 0;
	let i: u16 = y;
	while i < y {
		ans = ans + x;
		i = i + 1;
	}
	return ans;
}*/

fn check(x: u16, y: u16) -> bool {
	return x > y && x >= 3 && x < 5;
}

fn main() -> void {
	let x = check(5, 1); // 0
	let y = check(4, 1); // 1
	let z = check(3, 2); // 1
	let a = check(3, 3); // 0
	let b = check(2, 3); // 0
	return;
}
