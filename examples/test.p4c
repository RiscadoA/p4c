/*fn fast_mul(x: u16, y: u16) -> u16 {
	if y == 0 {
		return 0;
	}
	else if y & 1 == 0 {
		return shl(fast_mul(x, shr(y)));
	}
	else {
		return x + mul(x, y - 1);
	}
}

fn dumb_mul(x: u16, y: u16) -> u16 {
	let ans: u16 = 0;
	let i: u16 = y;
	while i < y {
		ans = ans + x;
		i = i + 1;
	}
	return ans;
}*/

fn write_chr(chr: u16) -> void {
	*(0xFFFE as *u16) = chr;
	return;
}

fn main() -> void {
	write_chr('H');
	write_chr('e');
	write_chr('l');
	write_chr('l');
	write_chr('o');
	write_chr(' ');
	write_chr('W');
	write_chr('o');
	write_chr('r');
	write_chr('l');
	write_chr('d');
	write_chr('!');
	return;
}
